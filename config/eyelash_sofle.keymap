#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&lt 3 ESCAPE  &kp N1        &kp N2        &kp N3         &kp N4     &kp N5       &kp UP_ARROW     &kp N6         &kp N7     &kp N8     &kp N9      &kp N0    &kp MINUS
&kp TAB       &kp Q         &kp W         &kp E          &kp R      &kp T        &kp DOWN_ARROW   &kp Y          &kp U      &kp I      &kp O       &kp P     &kp BSLH
&to 1         &kp A         &kp S         &kp D          &kp F      &kp G        &kp LEFT_ARROW   &kp H          &kp J      &kp K      &kp L       &kp SEMI  &kp APOS
&kp LSHFT     &kp Z         &kp X         &kp C          &kp V      &kp B        &kp RIGHT_ARROW  &kp N          &kp M      &kp COMMA  &kp DOT     &kp FSLH  &to 2
&kp C_MUTE    &kp LEFT_WIN  &kp LEFT_ALT  &kp LA(GRAVE)  &kp SPACE  &kp LCTRL    &kp ENTER        &kp BACKSPACE  &kp ENTER  &kp EQUAL  &kp KP_NUM  &kp F2
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&trans      &kp F1           &kp F2          &kp F3           &kp F4             &kp F5               &mmv MOVE_UP     &kp F6           &kp F7           &kp F8           &kp F9      &kp F10           &kp F11
&trans      &kp PG_UP        &kp UP_ARROW    &kp PAGE_DOWN    &kp LC(PG_UP)      &kp LG(LC(LEFT))     &mmv MOVE_DOWN   &kp KP_DIVIDE    &kp KP_N7        &kp KP_N8        &kp KP_N9   &kp KP_MINUS      &kp F12
&to 0       &kp LEFT         &kp DOWN_ARROW  &kp RIGHT        &kp LC(PAGE_DOWN)  &kp LG(LC(RIGHT))    &mmv MOVE_LEFT   &kp KP_MULTIPLY  &kp KP_N4        &kp KP_N5        &kp KP_N6   &kp KP_PLUS       &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &kp LC(A)          &kp LC(LA(A))        &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_N3   &kp LEFT_BRACKET  &to 2
&kp C_MUTE  &trans           &trans          &trans           &trans             &trans               &mkp LCLK        &trans           &trans           &kp KP_N0        &kp KP_DOT  &kp KP_COMMA
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&trans  &trans          &trans          &trans           &trans          &trans    &mmv MOVE_UP     &trans    &trans    &trans        &trans     &trans  &trans
&trans  &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &msc SCRL_UP    &trans    &mmv MOVE_DOWN   &trans    &trans    &trans        &trans     &trans  &trans
&trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN  &trans    &mmv MOVE_LEFT   &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans  &msc SCRL_LEFT  &mkp MCLK       &msc SCRL_RIGHT  &trans          &trans    &mmv MOVE_RIGHT  &trans    &trans    &trans        &trans     &trans  &trans
&trans  &trans          &trans          &trans           &trans          &trans    &mkp LCLK        &trans    &trans    &trans        &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &trans  &trans  &trans      &trans     &trans       &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &trans      &trans     &trans       &trans
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &trans       &trans
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
